#!/bin/bash

dl_parse_single () {
	local num_p='[0-9]?([0-9])'
	local ran_p=$num_p[-,]$num_p
	local val=""
	local input=$1
	local negate=0
	local retval=0
	if [[ ${input:0:1} = "!" ]]; then 
		negate=1
		input=${input:1}
	fi
	case $input in
		$num_p)
			local num=$input; ((num--))
			local link=${dl_id[$num]}
			if [[ $negate -eq 1 ]]; then
				val+=" !$link"
			else
				val+=" $link"
			fi
			;;
		"@")
			for link in "${dl_id[@]}"; do
				if [[ $negate -eq 1 ]]; then
					val+=" !$link"
				else
					val+=" $link"
				fi
			done
			;;
		$ran_p)
			#parse
			local init; init=$(parse_2_digit ${input:0:2})
			local dex=$((2+$?)); ((init--))
			local end=$(parse_2_digit ${input:$dex:$((2+dex))})
			dex=$init

			#dl
			while [[ $dex -lt $end ]]; do
				local link=${dl_id[$dex]}
				if [[ $negate -eq 1 ]]; then
					val+=" !$link"
				else
					val+=" $link"
				fi
				((dex++))
			done
			;;
		*)
			val+=" ERROR"
			retval=1
			;;
	esac
	echo $val
	exit $retval
}

dl_parse_list () {
	local dls=""
	local dex=1
	local retval=0
	while [[ $dex -lt $((1+$#)) ]]; do
		dls+=" $(dl_parse_single ${!dex})"
		if [[ $? -eq 1 ]]; then
			retval=1
		fi
		((dex++))
	done
	echo $dls
	exit $retval
}

dl_single () {
	if [[ "$1" = *"deezer.com"* ]]; then
		if [[ $verbose -gt 1 ]]; then
			local id=${1##https://www.deezer.com/*/}
			echo "Starting download: $id"; 
			if [[ $verbose -gt 2 ]]; then pipe=1; else pipe="/dev/null"; fi	
		fi	
		alacritty -e deemix -p "$LIBRARY_DIR" "$1"
	fi
}

dl_list () {
	for str in "$@"; do
		dl_single $str &
	done
}


download () {
	if [[ "$1" = +(?)" "+(?) ]]; then
		dl_list $1
	else
		dl_single $1
	fi
}

DL_PROMPT () {
	dl_input="$1"
	if [[ $dl_input = *( ) ]]; then
		printf "	$(italic "CHEAT SHEET: a b-c !d @")\n"
		printf "Download which?		'ENTER' for all; 'CTRL-C' to cancel; 'h' for help\n"
		read dl_input
		if [[ $dl_input = *( ) ]]; then dl_input="@"; fi
	fi
	if [[ $dl_input = *( )@(h|help)*( ) ]]; then
		printf "   Enter the indices of the results you'd like to download, \n in the form of a space-separated list. \n\n"
		printf "	   $(bold "SHORTHAND\n	SYNTAX		USAGE		EXAMPLE\n")"
		printf "	'x'	number		'9 10 21' downloads the 9th, 10th, and 21st search result.\n"
		printf "  'x,y'|'x-y'	range		'1-10' downloads the top 10 search results.\n"
		printf " TODO: '!x'	negation	'@ !13 !4' downloads all but the 4th and 13th search results.\n"
		printf "	'@'	everything	'@' downloads all search results.\n\n"
		printf "	$(bold "TIPS")\n"
		printf "	  • Shorthand can compound to meet most tasks. For example: \n"
		printf "	     '@ !2-4' downloads all results except the 2nd, 3rd, and 4th.\n"
		printf "	  • If you didn't find what you were looking for, you can always use 'CTRL-C' to quit.\n"
		printf "	  • Reminders for the shorthand are shown on the download prompt. \n"
		printf "\n"
		DL_PROMPT
	fi
}
