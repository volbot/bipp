#!/bin/bash/

italic () { echo -e "\e[3m$1\e[0m"; }
bold_strike() { echo -e "\e[9m\e[1m$1\e[0m"; }
bold () { echo -e "\e[1m$1\e[0m"; }
bold_italic () { echo -e "\e[3m\e[1m$1\e[0m"; }
color_red() { echo -e "\e[31m$1\e[0m"; }
color_gray() { echo -e "\e[90m$1\e[0m"; }

DECOR=()
for i in {1..7}; do
	if [ $i -lt 2 ]; then DECOR+=("☾" "☁︎"); fi
	if [ $i -lt 4 ]; then DECOR+=("⋆" "ﾟ"); fi
	if [ $i -lt 5 ]; then DECOR+=("｡"); fi
	if [ $i -lt 6 ]; then DECOR+=(" "); fi
done
DECOR_LEN=${#DECOR[@]}

decor () {
	val=""; for i in $(seq 1 $1); do 
		printf -v val "%s%s" "$val" "${DECOR[$(($RANDOM%$DECOR_LEN))]}"
       	done; echo "$val"; exit 0
}
decor_fancy () {
	echo "\e[3m\e[90m✴""$(decor $1)""✴\e[0m"
}

parse_until () {
	local offset=2
	let local index=${offset}+$1
	local dln="$2"; local query_text="${!index}"

	((index++))
	while ! [[ "${!index}" =~ ^(${dln})$ ]]; do
		if [[ $[index] -gt $# ]]; then break 1; fi
		local query_text="$query_text%20${!index}"
		((index++))
	done

	echo $query_text
	let local ret=${index}-${offset}
	return $ret
}

parse_2_digit () {
	if [[ ${1:1:2} = '' ]]; then
		echo ${1:0:1}
		exit 0
	fi
	if [[ $1 = [0-9][-,] ]]; then
		echo ${1:0:1}
		exit 0
	else
		echo ${1:0:2}
		exit 1
	fi
}

volcurl () {
	if [[ "$verbose" -gt 2 ]]
	then
		echo ""
		local json=$(curl $1)
	else
		local json=$(curl -s $1)
	fi
	echo $json
}

PRINT_HELP () {
	printf "$(bold "✴")"
	printf "$(italic "$(decor 3)")"
	printf "$(bold "|‾|")"
	printf "$(italic "$(decor 3)")"
	printf "$(bold "_")"
	printf "$(italic "$(decor 39)")"
	printf "$(bold "✴\n")"

	printf "$(bold "    | |  /_\           \n")"
	printf "$(bold "    | |_  _ __ _ __ _	   ")$(italic "package manager for\n")"
	printf "$(bold "    | '_ \ | '_ \ '_ \ 	   ")$(italic "your music library.\n")"
	printf "$(bold "    |_.__/_| .__/ .__/ 	   ")$(italic "with <3, allomyrina\n")"
	printf "$(bold "           | |  | |     \n")"

	printf "$(bold "✴")"
	printf "$(italic "$(decor 10)")"
	printf "$(bold "|_|")"
	printf "$(italic "$(decor 2)")"
	printf "$(bold "|_|")"
	printf "$(italic "$(decor 31)")"
	printf "$(bold "✴\n\n")"

	printf " $(bold "USAGE: bipp [")"
	printf "$(bold_italic "BIPP_ARGS")"
	printf "$(bold "]")"
	printf " $(bold_italic "<command>")"
	printf "$(bold " [")"
	printf "$(bold_italic "COMMAND_PARAMS")] \n\n"

	printf "    $(bold "-//BIPP_ARGS//-") \n"
	printf "  $(bold "-p <path>") ""$(decor_fancy 12)"" specify download location \n"
	printf "  $(bold "-v <verbosity>") ""$(decor_fancy 7)"" specify amount of output \n"
	printf "			 0 = silent \n"
	printf "			 1 = command output only \n"
	printf "			 2 = deemix progress \n"
	printf "    			 3 = everything \n\n"

	printf "    $(bold "-//COMMANDS//-") \n"
	printf "  $(bold "help") ""$(decor_fancy 9)"" print this dialog \n"
	printf "  $(bold "search") ""$(decor_fancy 7)"" see $(bold "-//SEARCH//-") \n\n"
	
	printf "    $(bold "-//SEARCH//-") \n"
	printf "  ... $(bold "search [")"
	printf "$(bold_italic "dl")$(bold "] [")"
	printf "$(bold_italic "type")$(bold "] <")"
	printf "$(bold_italic "param1, param2,...")$(bold "> ")\n"
	printf "	 $(bold "dl") ""$(decor_fancy 10)"" include to download results \n"
	printf " 					ex: bipp search $(italic "dl") track KKona Man\n"
	printf "					downloads tracks called KKona Man \n"
	printf "	 $(bold "type") ""$(decor_fancy 8)"" (track|album|artist) \n"
	printf "	 $(bold "param") ""$(decor_fancy 7)"" filter predicate, of form: <$(italic "type")> <$(italic "value")>, where: \n"
	printf "			   type: (artist|album|track|label|$(color_red "dur_min")|$(color_red "dur_max")|$(color_red "bpm_min")|$(color_red "bpm_max")) \n"
	printf "			   query: search string \n "
	printf "			ex: bipp st $(italic "album Beam Me Up Scotty artist gucci") \n"
	printf "			       displays tracks by Gucci Mane on albums called Beam Me Up Scotty \n\n"

	printf "    $(bold "-//ALIASES//-") \n"
	printf "  $(bold "h|-h|--h|help|-help|--help") ""$(decor_fancy 7)"" take a guess	\n"
	printf "  $(bold "<s|S>[r|a|t]") ""$(decor_fancy 21)"" shorthand for $(bold "search") \n"
	printf "			's'= search 	'S' = search dl\n"
	printf "			'r'= album 	\n"
	printf "			'a'= artist 	\n"
	printf "			't'= track 	\n"
	printf "		ex: bipp $(italic "sr") 100 gecs ""$(decor_fancy 16)"" displays albums called \"100 gecs\"\n"
	printf "		ex: bipp $(italic "St") artist Ana Frango ""$(decor_fancy 7)"" downloads tracks by artist \"Ana Frango\"\n\n"


	printf "    $(bold "-//EXAMPLES//-") \n"
	printf "  $(italic "\$bipp search track BIPP artist SOPHIE") \n"
	printf "     displays songs called BIPP by SOPHIE \n"
	printf "  $(italic "\$bipp search dl track artist MC Boing album Harlecore") \n"
	printf "     downloads songs by MC Boing on albums called Harlecore \n"
	printf "  $(italic "\$bipp -v 0 Sa a Frank Ocean label Blonded \n")"
	printf "     silently downloads albums by Frank Ocean, published by Blonded \n"

	printf "\n"
}
