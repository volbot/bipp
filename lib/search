#!/bin/bash

ALIAS_RECORD="r|record|album"
ALIAS_ARTIST="a|artist"
ALIAS_TRACK="t|track|song"
QUERY_TYPES_STR="$ALIAS_RECORD|$ALIAS_ARTIST|$ALIAS_TRACK|label"
QUERY_TYPES_INT="bpm_min|bpm_max|dur_min|dur_max"
S_PATTERN="[s|S]?([rat])"

get_search_string () {
	local in="$1"
	if [[ ${#in} -gt $2 ]]; then in="${in:0:$(($2 - 3))}..."; fi
	local str="$(decor_fancy $(( $(($2 + 3)) - ${#in} )))"
	echo "$in $str"	
}

SEARCH_QUERY () {
	local json=$(volcurl "$2")

	search_total=$(echo "${json}" | jq -r ".total")
	if [[ $search_total -eq 0 ]]; then
		printf "No results found \n"
		exit 1
	fi
	if [[ $dl != 'false' ]]; then
		dl_id=()
	fi
	local index=0
	if [[ $verbose -gt 0 ]]; then
		local pad="                             "
		if [[ "$1" = "album" ]]; then
			printf "%.5s%s%.19s%s%.19s%s\n" "$pad" "$(bold "album title")" "$pad" "$(bold "artist name")" "$pad" "$(bold "information")"
		elif [[ "$1" = "artist" ]]; then 
			printf "%.5s%s%.19s%s\n" "$pad" "$(bold "artist name")" "$pad" "$(bold "albums")"
		elif [[ "$1" = "track" ]]; then 
			printf "%.5s%s%.19s%s%.19s%s%.19s%s\n" "$pad" "$(bold "track title")" "$pad" "$(bold "artist name")" "$pad" "$(bold "album title")" "$pad" "$(bold "time")"
		fi
	fi
	while [[ $index -lt $search_total ]]; do
		local search=$(echo "${json}" | jq -r ".data[${index}]");((index++))
		if [[ $search = "null" ]]; then break 1; fi
		if [[ $dl != 'false' ]]; then
			local id=$(echo "$search" | jq -r ".id")
			dl_id+=( "https://www.deezer.com/$1/$id" )
		fi

		if [[ "$verbose" -eq 0 ]]; then continue 1; fi
		local line
		if [[ "$1" = "album" ]]; then
			local title=$(echo "$search" | jq -r ".title")
			local artist=$(echo "$search" | jq -r ".artist.name")
			local type=$(echo "$search" | jq -r ".record_type")
			local nb_tracks=$(echo "$search" | jq -r ".nb_tracks")
			local explicit=$(echo "$search" | jq -r ".explicit_lyrics")

			printf -v line "$(bold "%2d:")" $index
			printf -v line "${line} %s" "$(get_search_string "${title}" 23)"
			printf -v line "${line} %s" "$(get_search_string "${artist}" 23)"
			printf -v line "${line} [$type; $nb_tracks tracks]"
			if [[ $explicit = 'true' ]]; then
				local x=$(( 7 - ${#type} ))
				x=$(( x + 2 - ${#nb_tracks} ))
				printf -v line "${line} %.*s[Explicit]" $x "         "
			fi
		elif [[ "$1" = "artist" ]]; then 
			local name=$(echo "$search" | jq -r ".name")
			local nb_album=$(echo "$search" | jq -r ".nb_album")

			printf -v line "%2d:" $index
			printf -v line "${line} %s" "$(get_search_string "${name}" 23)"
			printf -v line "${line} [$nb_album albums]"
		elif [[ "$1" = "track" ]]; then 
			local title=$(echo "$search" | jq -r ".title")
			local artist=$(echo "$search" | jq -r ".artist.name")
			local sec=$(echo "$search" | jq -r ".duration")
			let local min=sec/60
			let local temp=min*60
			let local sec=sec-temp
			if [[ $sec -lt 10 ]]; then printf -v sec "%02d" "$sec"; fi
			local album_title=$(echo "$search" | jq -r ".album.title")

			printf -v line "%2d:" $index
			printf -v line "${line} %s" "$(get_search_string "${title}" 23)"
			printf -v line "${line} %s" "$(get_search_string "${artist}" 23)"
			printf -v line "${line} %s" "$(get_search_string "${album_title}" 23)"
			printf -v line "${line} [%02d:%02d]" $min $sec
		fi
		printf "$line \n"
	done
}

SEARCH () {
	#PARSING STAGE
	local query="https://api.deezer.com/search/"
	local search_type="none"
	local index=2
	case "$1" in
		$S_PATTERN)
			if [[ $1 = S? ]]; then 
				dl='true'; 
			fi
			if [[ $1 = ?[rat] ]]; then
				case ${1:1:2} in
					r) search_type="album";;
					a) search_type="artist";;
					t) search_type="track";;
				esac
				query+="${search_type}?"
			fi
			;;&
		@(s|search))
			if [[ "$2" = @(dl|download) ]]; then 
				dl='true'
				((index++)) 
			fi
			;;
	esac
	if [[ $search_type = "none" ]]; then
		case "${!index}" in
			@($ALIAS_RECORD)) search_type="album";;
			@($ALIAS_ARTIST)) search_type="artist";;
			@($ALIAS_TRACK)) search_type="track";;
			*) 
				printf "Search type not specified. Exiting..."
				exit 1
				;;
		esac
		((index++))
	fi
	if [[ $verbose -gt 0 ]]; then
		local str="Query: <${search_type}> where"
		if ! [[ $index-eq$# ]]; then
			str="${str} where"
		fi
	fi

	query+="q="
	local query_text=""; local query_type
	while [[ $index -lt $(($#+1)) ]]; do
		case "${!index}" in
			@($ALIAS_TRACK)) query_type="track";;
			@($ALIAS_RECORD)) query_type="album";;
			@($ALIAS_ARTIST)) query_type="artist";;
			@(label|bpm_min|bpm_max|dur_min|dur_max)) query_type=${!index};;
			*)
				if [[ $query_text = "" ]]; then
					query_type="$search_type"
					((index--))
				else
					printf "Unrecognized filter type \"${!index}\". Exiting..." 
					exit 0
				fi
				;;
		esac; ((index++))
		query_text=$(parse_until $index "$QUERY_TYPES_INT|$QUERY_TYPES_STR" $@) || index=$?;
		if [[ "$query_type" = @($QUERY_TYPES_STR) ]]; then
			query_text=\"$query_text\"
		fi
		if [[ $verbose -gt 0 ]]; then
			str+=" [${query_type}=${query_text}]"
		fi
		query+="$query_type:$query_text"
		
		if [[ ${index} -lt $(($#+1)) ]]; then query+="%20"; fi
	done

	if [[ $verbose -gt 0 ]]; then
		echo ${str//%20/ }
	fi
	echo
	SEARCH_QUERY "$search_type" "$query"

	if [[ "$dl" = 'false' ]]; then 
		exit 0
	fi
}

